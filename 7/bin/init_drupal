#!/usr/bin/env bash

set -e

if [[ -n "${DEBUG}" ]]; then
    set -x
fi

function file_env() {
    local var="$1"
    local fileVar="${var}_FILE"
    local def="${2:-}"
    # if [ "${!var:-}" ] && [ "${!fileVar:-}" ]; then
    # 	echo >&2 "error: both $var and $fileVar are set (but are exclusive)"
    # 	exit 1
    # fi
    local val="$def"
    if [ "${!fileVar:-}" ]; then
        val="$(<"${!fileVar}")"
    elif [ "${!var:-}" ]; then
        val="${!var}"
    fi
    if [ -z ${val} ]; then
        echo >&2 "error: neither $var nor $fileVar are set but are required"
        exit 1
    fi
    export "$var"="$val"
    unset "$fileVar"
}

file_env 'DB_PASSWORD'

disclaimer="\n// Generated by Wodby."
settings_php="${DRUPAL_SITE_DIR}/settings.php"
sites_php="${DRUPAL_ROOT}/sites/sites.php"

mkdir -p "${DRUPAL_SITE_DIR}"
chmod 755 "${DRUPAL_SITE_DIR}" || true

# Include wodby.settings.php
if [[ ! -f "${settings_php}" ]]; then
    echo -e "<?php\n\n" >"${settings_php}"
fi

if [[ $(grep -ic "wodby.settings.php" "${settings_php}") -eq 0 ]]; then
    chmod 644 "${settings_php}"
    echo -e "${disclaimer}" >>"${settings_php}"
    echo -e "include '${CONF_DIR}/wodby.settings.php';" >>"${settings_php}"
fi

if [[ "${DRUPAL_SITE}" != "default" ]]; then
    if [[ ! -f "${sites_php}" ]]; then
        echo -e "<?php\n\n" > "${sites_php}"
    fi

    if [[ $( grep -ic "wodby.sites.php" "${sites_php}" ) -eq 0 ]]; then
        echo -e "${disclaimer}" >> "${sites_php}"
        echo -e "include '${CONF_DIR}/wodby.sites.php';" >> "${sites_php}"
    fi
fi

# Set up symlink for files dir.
files_link "${DRUPAL_SITE_DIR}/files"
